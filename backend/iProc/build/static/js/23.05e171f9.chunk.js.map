{"version":3,"sources":["common/storage/sessionStorage.js","common/api.js",".env","../node_modules/@material-ui/core/esm/Link/Link.js","main/users/signIn/partials/SignInForm.js","main/users/signIn/SignIn.js","main/users/signIn/signIn.actions.js","main/users/signIn/signIn.actionCreators.js","main/users/signIn/SignIn.container.js"],"names":["sessionStorage","get","key","serialized","window","getItem","JSON","parse","err","set","value","stringify","setItem","console","error","clear","remove","removeItem","axios","defaults","baseURL","appEnv","apiUrl","getOptions","config","isEmpty","localStorage","user","verificationToken","headers","Authorization","concat","url","merge","getHeaders","api","options","module","exports","Link","React","props","ref","classes","className","_props$color","color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","other","_objectWithoutProperties","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","Typography","_extends","clsx","root","capitalize","button","event","withStyles","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","borderStyle","name","useStyles","makeStyles","theme","input","CssTextField","borderBottomColor","borderColor","TextField","Button","styled","MuiButton","spacing","SignInForm","userSignIn","isSubmitting","initialValues","username","password","onSubmit","values","setSubmitting","validate","errors","touched","handleChange","handleSubmit","setFieldValue","FormControl","fullWidth","id","autoComplete","label","onChange","helperText","InputProps","type","mt","boxShadow","Wrapper","Paper","breakpoints","up","SignIn","title","align","gutterBottom","href","credentials","dispatch","Types","method","data","then","response","payload","access_token","token","userId","userName","user_data","history","push","go","catch","alert","connect","state","formStatus","signIn","signInMessage","signInUi"],"mappings":"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","file":"static/js/23.05e171f9.chunk.js","sourcesContent":["const sessionStorage = {\r\n  get: (key) => {\r\n    try {\r\n      const serialized = window.sessionStorage.getItem(key);\r\n      if (serialized === null) {\r\n        return undefined;\r\n      }\r\n      return JSON.parse(serialized);\r\n    } catch (err) {\r\n      return undefined;\r\n    }\r\n  },\r\n  set: (key, value) => {\r\n    try {\r\n      const serialized = JSON.stringify(value);\r\n      window.sessionStorage.setItem(key, serialized);\r\n    } catch (err) {\r\n      /* eslint-disable no-console */\r\n      console.error(err);\r\n      /* eslint-enable no-console */\r\n    }\r\n  },\r\n  clear: () => {\r\n    try {\r\n      window.sessionStorage.clear();\r\n    } catch (err) {\r\n      /* eslint-disable no-console */\r\n      console.error(err);\r\n      /* eslint-enable no-console */\r\n    }\r\n  },\r\n  remove: (key) => {\r\n    try {\r\n      window.sessionStorage.removeItem(key);\r\n    } catch (err) {\r\n      // eslint-disable-next-line no-console\r\n      console.error(err);\r\n    }\r\n  }\r\n};\r\n\r\nexport default sessionStorage;\r\n","import merge from 'lodash/merge';\r\nimport get from 'lodash/get';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport map from 'lodash/map';\r\nimport axios from 'axios';\r\nimport localStorage from './storage/localStorage';\r\nimport sessionStorage from './storage/sessionStorage';\r\nimport appEnv from '../.env';\r\n\r\naxios.defaults.baseURL = appEnv.apiUrl;\r\n\r\nconst getHeaders = (config) => {\r\n  const user = localStorage.get('user');\r\n  const verificationToken = sessionStorage.get('verificationToken');\r\n  const bearerToken = () => {\r\n    if (config.url === 'v1/users/verify' || config.url === 'v1/users/reset-password') {\r\n      return verificationToken;\r\n    }\r\n    return get(user, 'access_token');\r\n  };\r\n  const headers = { Authorization: 'Bearer '.concat(bearerToken()) };\r\n  return merge({}, config, { headers });\r\n};\r\n\r\nconst getOptions = (config) => {\r\n  const hasAuthenticated = !isEmpty(localStorage.get('user')) || !isEmpty(sessionStorage.get('verificationToken'));\r\n  if (hasAuthenticated) {\r\n    return getHeaders(config);\r\n  }\r\n  return config;\r\n};\r\n\r\nconst api = (config) => {\r\n  const options = getOptions(config);\r\n  return axios(options);\r\n};\r\n\r\nexport const concurrent = fns => axios.all(map(fns, f => f()));\r\n\r\nexport default api;\r\n","module.exports = __webpack_public_path__ + \"static/media/.env.7cb5ef0c.bin\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import {\r\n  Formik,\r\n  Form\r\n} from 'formik';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { usernameRegex } from '../../../../common/regex.handler';\r\nimport {\r\n  FormControl,\r\n  TextField,\r\n  Button as MuiButton,\r\n  withStyles,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  input: {\r\n    color: 'white'\r\n  }\r\n}));\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    color: 'white',\r\n    \"& label\": {\r\n      color: \"white\"\r\n    },\r\n    \"& label.Mui-focused\": {\r\n      color: \"white\"\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"white\"\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"white\"\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"white\"\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"white\"\r\n      }\r\n    }\r\n  }\r\n})(TextField);\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst SignInForm = (props) => {\r\n    const { userSignIn, isSubmitting } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <Formik\r\n        className=\"form\"\r\n        initialValues={{ username: '', password: '' }}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          userSignIn(values);\r\n          setSubmitting(false);\r\n        }}\r\n        validate={(values) => {\r\n          const errors = {};\r\n\r\n          if (!values.username) {\r\n            errors.username = 'Username is required';\r\n          }\r\n\r\n          if (!values.password) {\r\n            errors.password = 'Password is required';\r\n          }\r\n\r\n          // if (!usernameRegex(values.username)) {\r\n          //   errors.username = 'Invalid username address';\r\n          // }\r\n\r\n          return errors;\r\n        }}\r\n      >\r\n        {(props) => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            handleChange,\r\n            handleSubmit,\r\n            setFieldValue\r\n          } = props;\r\n          return (\r\n            <Form onSubmit={handleSubmit} className=\"form\">\r\n              <FormControl margin=\"normal\" fullWidth>\r\n                <CssTextField id=\"username\" name=\"username\" autoComplete=\"username\"\r\n                  label=\"Username\" \r\n                  onChange={handleChange}\r\n                  error={errors.username && touched.username}\r\n                  helperText={errors.username && touched.username && errors.username}\r\n                  InputProps={{\r\n                    className: classes.input\r\n                  }}\r\n                />\r\n              </FormControl>\r\n              <FormControl margin=\"normal\" fullWidth>\r\n                <CssTextField\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  label=\"Password\" \r\n                  autoComplete=\"current-password\"\r\n                  onChange={handleChange}\r\n                  error={errors.password && touched.password}\r\n                  helperText={errors.password && touched.password && errors.password}\r\n                  InputProps={{\r\n                    className: classes.input\r\n                  }}\r\n                />\r\n              </FormControl>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                mt={2}\r\n              >\r\n                Sign in\r\n              </Button>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    );\r\n}\r\n\r\nSignInForm.propTypes = {\r\n  userSignIn: PropTypes.func.isRequired,\r\n  isSubmitting: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default SignInForm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SignInForm from \"./partials/SignInForm\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  Link,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: '#373e46',\r\n    color: 'white',\r\n    '&:hover': {\r\n      boxShadow: '#232f3e 0px 54px 55px, #232f3e 0px -12px 30px, #232f3e 0px 4px 6px, #232f3e 0px 12px 13px, #BCE7FD 0px -3px 5px'\r\n    }\r\n  }\r\n}));\r\n\r\nconst Wrapper = styled(Paper)`\r\n  padding: ${props => props.theme.spacing(6)}px;\r\n\r\n  ${props => props.theme.breakpoints.up(\"md\")} {\r\n    padding: ${props => props.theme.spacing(10)}px;\r\n  }\r\n`;\r\n\r\nfunction SignIn(props) {\r\n  const classes = useStyles();\r\n  const { userSignIn } = props;\r\n  return (\r\n    <Wrapper className={classes.root}>\r\n      <Helmet title=\"Sign In\" />\r\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\" gutterBottom>\r\n        LOGIN TO YOUR ACCOUNT\r\n      </Typography>\r\n      <SignInForm userSignIn={userSignIn} />\r\n      <Typography component=\"h5\" align=\"center\" gutterBottom>\r\n        Don&apos;t have an account?\r\n      </Typography>\r\n      <Link href=\"/auth/sign-up\">\r\n        <Typography component=\"h5\" align=\"center\" gutterBottom>Create an account</Typography>\r\n      </Link>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import get from 'lodash/get';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport merge from 'lodash/merge';\r\nimport * as action from './signIn.actionCreators';\r\nimport api from '../../../common/api';\r\nimport localStorage from '../../../common/storage/localStorage';\r\nimport sessionStorage from '../../../common/storage/sessionStorage';\r\nimport history from '../../../common/History';\r\n\r\nconst userSignIn = credentials => (dispatch) => {\r\n  dispatch(action.userSignInRequest());\r\n  return api({\r\n    method: 'post',\r\n    url: 'http://localhost:8090/auth/token-auth/',\r\n    data: credentials  })\r\n    .then((response) => {\r\n      const { data, headers } = response;\r\n      // let user = {\r\n      //   setAuthorization: get(headers, 'access_token')\r\n      // };\r\n      // user = merge({}, user, data);\r\n      let user = {  access_token : data.token,\r\n            userId : data.user.id,\r\n            userName : data.user.username,\r\n            ...data.user.user_data\r\n      }\r\n      dispatch(action.userSignInSuccess(user));\r\n      localStorage.set('user', user);\r\n      debugger\r\n      // if (!isEmpty(sessionStorage.get('verificationToken'))) {\r\n      //   sessionStorage.remove('verificationToken');\r\n      // }\r\n      history.push('/');\r\n      history.go();\r\n    })\r\n    .catch((err) => {\r\n      // if(credentials.email === 'hamid@gmail.com') {\r\n      //   localStorage.set('user', {authToken: 'hamid', userGroup: 'admin'});\r\n      //   history.push('/');\r\n      //   history.go();\r\n      // }\r\n      alert(\"Incorrect password or email\")\r\n      dispatch(action.userSignInError(err));\r\n    });\r\n};\r\n\r\nexport default userSignIn;\r\n","import * as Types from './signIn.actionTypes';\r\n\r\nexport const userSignInRequest = () => ({\r\n  type: Types.USER_SIGNIN_REQUEST\r\n});\r\n\r\nexport const userSignInSuccess = payload => ({\r\n  type: Types.USER_SIGNIN_SUCCESS,\r\n  payload\r\n});\r\n\r\nexport const userSignInError = payload => ({\r\n  type: Types.USER_SIGNIN_ERROR,\r\n  payload\r\n});\r\n","import { connect } from 'react-redux';\r\nimport SignIn from './SignIn';\r\nimport userSignIn from './signIn.actions';\r\n\r\nconst mapStateToProps = state => ({\r\n  formStatus: state.signIn.signInMessage.formStatus,\r\n  isSubmitting: state.signIn.signInUi.isSubmitting\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  userSignIn: credentials => dispatch(userSignIn(credentials))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n"],"sourceRoot":""}