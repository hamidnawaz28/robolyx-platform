# Generated by Django 3.1.7 on 2021-05-11 11:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('basic_config', '0006_auto_20210504_0703'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('name', models.TextField(max_length=255, primary_key=True, serialize=False)),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendorcat_created_rev', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DiversityClassification',
            fields=[
                ('name', models.TextField(max_length=255, primary_key=True, serialize=False)),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendordiversity_created_rev', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReviewTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('JSON_fields', models.JSONField()),
                ('status', models.CharField(choices=[('active', 'active'), ('deactivated', 'deactivated')], default='active', max_length=50)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_template_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Trades',
            fields=[
                ('name', models.TextField(max_length=255, primary_key=True, serialize=False)),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateField(default=django.utils.timezone.now)),
                ('trade_status', models.CharField(choices=[('primary', 'primary'), ('secondary', 'secondary')], default='secondary', max_length=50)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendortrades_created_rev', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VendorBasicInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_name', models.CharField(max_length=255)),
                ('contact_name', models.CharField(max_length=255)),
                ('contact_email', models.EmailField(max_length=255)),
                ('contact_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('department', models.CharField(blank=True, max_length=255, null=True)),
                ('approval_status', models.CharField(blank=True, choices=[('approved', 'approved'), ('rejected', 'rejected'), ('pending', 'pending')], default='pending', max_length=50, null=True)),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('category', models.ManyToManyField(related_name='vendorbasic_cats_rev', to='vendor_management.Categories')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendorbasic_created_rev', to=settings.AUTH_USER_MODEL)),
                ('diversity', models.ManyToManyField(related_name='vendorbasic_diversity_rev', to='vendor_management.DiversityClassification')),
                ('payment_term', models.ManyToManyField(related_name='vendorbasic_payterm_rev', to='basic_config.PaymentTerm')),
            ],
        ),
        migrations.CreateModel(
            name='VendorTags',
            fields=[
                ('name', models.TextField(max_length=255, primary_key=True, serialize=False)),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendortag_created_rev', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VendorRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255)),
                ('phone_no', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=255)),
                ('language', models.CharField(blank=True, max_length=255, null=True)),
                ('extra_comments', models.CharField(blank=True, max_length=255, null=True)),
                ('deadline', models.DateField()),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('request_status', models.CharField(blank=True, choices=[('Open', 'Open'), ('Expired', 'Expired'), ('Closed', 'Closed')], default='Open', max_length=50, null=True)),
                ('request_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_req_created', to=settings.AUTH_USER_MODEL)),
                ('requesting_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_req_sites', to='basic_config.sites')),
            ],
        ),
        migrations.CreateModel(
            name='VendorHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_changed', models.CharField(blank=True, max_length=255, null=True)),
                ('model_changed', models.CharField(blank=True, max_length=255, null=True)),
                ('change_type', models.CharField(choices=[('create', 'create'), ('modification', 'modification')], default='create', max_length=50)),
                ('pre_value', models.CharField(blank=True, max_length=255, null=True)),
                ('post_value', models.CharField(blank=True, max_length=255, null=True)),
                ('modified_at', models.DateField(default=django.utils.timezone.now)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_history_user', to=settings.AUTH_USER_MODEL)),
                ('vendor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_history', to='vendor_management.vendorbasicinfo')),
            ],
        ),
        migrations.CreateModel(
            name='VendorFileUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_file', models.FileField(default='settings.MEDIA_ROOT/download.png', upload_to='')),
                ('file_name', models.CharField(max_length=255)),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_upload_user', to=settings.AUTH_USER_MODEL)),
                ('vendor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_fileupload', to='vendor_management.vendorbasicinfo')),
            ],
        ),
        migrations.CreateModel(
            name='VendorComplianceStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compliance_status', models.CharField(choices=[('compliant', 'compliant'), ('non-compliant', 'non-compliant'), ('forced-compliant', 'forced-compliant'), ('forced-non-compliant', 'forced-non-compliant')], default='non-compliant', max_length=50)),
                ('vendor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comp_status_vendor', to='vendor_management.vendorbasicinfo')),
            ],
        ),
        migrations.CreateModel(
            name='VendorComplianceHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_type', models.CharField(choices=[('submit', 'submit'), ('rating', 'rating')], default='submit', max_length=50)),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('compliance_template_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comp_history_template', to='vendor_management.reviewtemplate')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comp_history_user', to=settings.AUTH_USER_MODEL)),
                ('vendor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comp_history_vendor', to='vendor_management.vendorbasicinfo')),
            ],
        ),
        migrations.AddField(
            model_name='vendorbasicinfo',
            name='tags',
            field=models.ManyToManyField(related_name='vendorbasic_tag_rev', to='vendor_management.VendorTags'),
        ),
        migrations.AddField(
            model_name='vendorbasicinfo',
            name='trades',
            field=models.ManyToManyField(related_name='vendorbasic_trade', to='vendor_management.Trades'),
        ),
        migrations.CreateModel(
            name='VendorAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_type', models.CharField(choices=[('HO', 'HO'), ('SO', 'SO')], default='HO', max_length=50)),
                ('street_address', models.CharField(max_length=255)),
                ('postal_code', models.CharField(max_length=255)),
                ('suburb_name', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=255)),
                ('billing_status', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50)),
                ('longitude', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_address_created', to=settings.AUTH_USER_MODEL)),
                ('vendor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_address_rev', to='vendor_management.vendorbasicinfo')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewResponseStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_status', models.CharField(max_length=255)),
                ('overall_rating', models.CharField(max_length=255)),
                ('review_template_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='response_template_status', to='vendor_management.reviewtemplate')),
                ('vendor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='response_status_vendor', to='vendor_management.vendorbasicinfo')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_name', models.CharField(max_length=255)),
                ('question_no', models.CharField(max_length=255)),
                ('question_text', models.TextField()),
                ('answer', models.TextField()),
                ('question_type', models.CharField(choices=[('text', 'text'), ('rating', 'rating')], default='text', max_length=50)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_response_user', to=settings.AUTH_USER_MODEL)),
                ('template_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_response_template', to='vendor_management.reviewtemplate')),
                ('vendor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_review_user', to='vendor_management.vendorbasicinfo')),
            ],
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=255)),
                ('priority', models.CharField(max_length=255)),
                ('subject', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes_user', to=settings.AUTH_USER_MODEL)),
                ('vendor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_notes_rev', to='vendor_management.vendorbasicinfo')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceVendorTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.CharField(choices=[('high', 'high'), ('medium', 'medium'), ('low', 'low')], default='low', max_length=50)),
                ('req_status', models.CharField(choices=[('optional', 'optional'), ('compulsory', 'compulsory'), ('conditional', 'conditional')], default='optional', max_length=50)),
                ('completion_status', models.CharField(choices=[('done', 'done'), ('pending', 'pending'), ('overdue', 'overdue')], default='text', max_length=50)),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('deadline', models.DateField()),
                ('compliance_status', models.CharField(choices=[('compliant', 'compliant'), ('non-compliant', 'non-compliant'), ('forced-compliant', 'forced-compliant'), ('forced-non-compliant', 'forced-non-compliant')], default='non-compliant', max_length=50)),
                ('compliance_template_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliance_vendortask_user', to='vendor_management.reviewtemplate')),
                ('vendor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliance_task_vendor', to='vendor_management.vendorbasicinfo')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceVendorResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_name', models.CharField(max_length=255)),
                ('question_no', models.CharField(max_length=255)),
                ('question_text', models.TextField()),
                ('answer', models.TextField()),
                ('question_type', models.CharField(choices=[('text', 'text'), ('rating', 'rating')], default='text', max_length=50)),
                ('compliance_template_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comp_vendor_response_template', to='vendor_management.reviewtemplate')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comp_vendor_response_user', to=settings.AUTH_USER_MODEL)),
                ('vendor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comp_vendor_response', to='vendor_management.vendorbasicinfo')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceTaskCriteria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compliance_template_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comp_task_criteria_template', to='vendor_management.reviewtemplate')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_questions', models.JSONField()),
                ('form_name', models.CharField(choices=[('auto_answer', 'auto_answer'), ('to_be_reviewed', 'to_be_reviewed')], max_length=255)),
                ('form_type', models.CharField(max_length=75)),
                ('created_at', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('last_modified_date', models.DateField(default=django.utils.timezone.now)),
                ('activation_status', models.CharField(choices=[('active', 'active'), ('deactivated', 'deactivated')], default='active', max_length=50)),
                ('priority', models.CharField(choices=[('high', 'high'), ('medium', 'medium'), ('low', 'low')], default='low', max_length=50)),
                ('req_status', models.CharField(choices=[('optional', 'optional'), ('compulsory', 'compulsory'), ('conditional', 'conditional')], default='optinal', max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliance_task_cat', to='vendor_management.categories')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliance_creator_user', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliance_modifier_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CertificatesAndLisences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_name', models.CharField(max_length=255)),
                ('registration_no', models.CharField(max_length=255)),
                ('aggregation_body', models.CharField(max_length=255)),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_cert_user', to=settings.AUTH_USER_MODEL)),
                ('vendor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_cert', to='vendor_management.vendorbasicinfo')),
            ],
        ),
    ]
